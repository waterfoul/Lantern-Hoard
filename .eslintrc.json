{
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module"
  },
  "extends": "fullstack",
  "rules": {
    "eqeqeq": ["error"],
    "camelcase": ["off"],
    // This enforces camelCasing or ALL_CAPS_WITH_UNDERSCORES but allows an _id suffix
    "id-match": [
      "error",
      "^(([A-Za-z_$][A-Za-z0-9]*(_id)?_?)|([A-Z_]+))$",
      {
        "properties": true
      }
    ],
    "arrow-parens": ["error", "always"],
    "semi": ["error", "always"],
    "indent": [
      "error",
      "tab",
      { "SwitchCase": 1 }
    ],
    "space-infix-ops": ["error"],
    "no-shadow": ["error"],
    "no-trailing-spaces": ["error"],
    "eol-last": ["error"],
    "no-undef": ["error"],
    "no-unused-expressions": ["warn"],
    "id-length": ["off"],
    "react/prop-types": ["off"],
    "no-return-assign": ["error"],
    "keyword-spacing": ["error"],
    "object-curly-spacing": ["error", "always"],
    "new-cap": [
      "error",
      {
        "capIsNewExceptionPattern": "^Sequelize\\.[A-Z]+$"
      }
    ],
    /*
      This disallows unused variables. This is one of those code smells which can improve performance as every variable
      takes up memory. It also catches extra imports which you've added at the top of the file which you aren't using
    */
    "no-unused-vars": ["error"],
    /*
      This disallows functions to be too logically complicated. This can help prompt you to break a function down since
      functions which break this rule often times really shouldn't be one big function
    */
    "complexity": ["error"]
  }
}